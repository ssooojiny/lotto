package com.spring.lotto;

import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.spring.lotto.domain.TestVO;
import com.spring.lotto.pageutil.ListBackNextCriteria;
import com.spring.lotto.pageutil.ListBackNextMaker;
import com.spring.lotto.service.TestService;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {
   
   private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
   
   @Autowired
   private TestService testService;
   
   /**
    * Simply selects the home view to render by returning its name.
    */
   @RequestMapping(value = "/", method = RequestMethod.GET)
   public String home(Locale locale, Model model, Integer page, Integer perPage) {
      logger.info("Welcome home! The client locale is {}.", locale);
      
      Date date = new Date();
      DateFormat dateFormat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);
      
      String formattedDate = dateFormat.format(date);
      
      model.addAttribute("serverTime", formattedDate );
      
		
		  // 페이징 처리로...
		  logger.info("listPreNext controller is called...............!!");
		  
		   //페이징 처리로... 
		   ListBackNextCriteria c = new ListBackNextCriteria();
		  
		  if (page != null) { c.setPage(page); }
		  
		  if (perPage != null) { c.setViewlistone(perPage); } List<TestVO> list =
		  testService.listbacknext(c); model.addAttribute("miniList", list);
		  
		  ListBackNextMaker maker = new ListBackNextMaker(); maker.setCriteria(c);
		  maker.setTotalCount(testService.getTotalNums()); maker.setPageData();
		  model.addAttribute("listMaker", maker);
		 


      return "home";
   }
   
   @RequestMapping(value="/leftside", method=RequestMethod.GET)
   public void leftside() {
			
		}
   
	/*
	 * @RequestMapping(value="/main-top",method=RequestMethod.GET) public String
	 * mainTop(Model model, Integer page, Integer perPage) { // 페이징 처리로...
	 * logger.info("listPreNext controller is called...............!!");
	 * 
	 * // 페이징 처리로... ListBackNextCriteria c = new ListBackNextCriteria();
	 * 
	 * if (page != null) { c.setPage(page); }
	 * 
	 * if (perPage != null) { c.setViewlistone(perPage); } List<TestVO> list =
	 * testService.listbacknext(c); model.addAttribute("miniList", list);
	 * 
	 * ListBackNextMaker maker = new ListBackNextMaker(); maker.setCriteria(c);
	 * maker.setTotalCount(testService.getTotalNums()); maker.setPageData();
	 * model.addAttribute("listMaker", maker);
	 * 
	 * return "main-top"; }
	 */
   
}